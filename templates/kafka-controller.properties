process.roles=${KAFKA_PROCESS_ROLES}
node.id=${KAFKA_NODE_ID}
controller.quorum.voters=${KAFKA_CONTROLLER_QUORUM_VOTERS}
controller.listener.names=${KAFKA_CONTROLLER_LISTENER_NAMES}
listeners=${KAFKA_LISTENERS}
# Enable the migration
zookeeper.metadata.migration.enable=${KAFKA_ZOOKEEPER_METADATA_MIGRATION_ENABLE}
# ZooKeeper client configuration
zookeeper.connect=${KAFKA_ZOOKEEPER_CONNECT}
# Enable migrations for cluster linking
confluent.cluster.link.metadata.topic.enable=${KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_ENABLE}
# Other configuration entries ...
#inter.broker.listener.name=PLAINTEXT
transaction.state.log.min.isr=1
#inter.broker.protocol.version=3.6
confluent.license.topic.replication.factor=1
group.initial.rebalance.delay.ms=0
#advertised.listeners=PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:19092
#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
confluent.balancer.topic.replication.factor=1
#broker.id=1
transaction.state.log.replication.factor=1
log.dirs=/var/lib/kafka/data
offsets.topic.replication.factor=1
confluent.balancer.enable=true
confluent.support.customer.id=anonymous
confluent.metrics.reporter.topic.replicas=1
confluent.metrics.enable=true